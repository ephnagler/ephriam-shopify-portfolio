---
import JumboText from "../components/JumboText.astro";
import Nav from "../components/Nav.astro";
import Work from "../components/Work.astro";
import "../styles/global.css";
import { ClientRouter } from "astro:transitions";
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>Ephriam Nagler â€“ Shopify Expert</title>

    <!-- Preconnect to local fonts for faster loading -->
    <link rel="preconnect" href="/fonts/" />
    <link rel="dns-prefetch" href="/fonts/" />

    <ClientRouter />

    <!-- PostHog tracking script for Astro view transitions -->
    <script>
      // Initialize PostHog if API key is available and not in development
      if (
        typeof window !== "undefined" &&
        import.meta.env.PUBLIC_POSTHOG_API_KEY &&
        !import.meta.env.DEV
      ) {
        import("posthog-js").then((posthog) => {
          posthog.default.init(import.meta.env.PUBLIC_POSTHOG_API_KEY, {
            api_host:
              import.meta.env.PUBLIC_POSTHOG_HOST || "https://us.i.posthog.com",
            ui_host: "https://us.posthog.com",
            defaults: "2025-05-24",
            autocapture: true,
            session_recording: {
              recordCrossOriginIframes: false,
            },
            advanced_disable_decide: false,
            capture_exceptions: true,
          });
        });
      }

      // Wait for PostHog to be ready
      function trackPageView() {
        if (typeof window !== "undefined" && (window as any).posthog) {
          (window as any).posthog.capture("$pageview", {
            $current_url: window.location.href,
            $pathname: window.location.pathname,
            $title: document.title,
          });
        }
      }

      // Track page views with Astro's view transitions
      document.addEventListener("astro:page-load", trackPageView);

      // Track initial page load (with a small delay to ensure PostHog is ready)
      if (typeof window !== "undefined") {
        setTimeout(trackPageView, 100);
      }
    </script>

    <!-- Unified animation system -->
    <script>
      let animationObserver: IntersectionObserver | null = null;

      // Unified intersection observer for all animations
      function setupUnifiedAnimations() {
        // Clean up existing observer
        if (animationObserver) {
          animationObserver.disconnect();
        }

        const observerOptions = {
          threshold: 0.3,
          rootMargin: "0px 0px -50px 0px",
        };

        animationObserver = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const element = entry.target as HTMLElement;
              const animationType = element.dataset?.animationType as
                | "line"
                | "content"
                | undefined;

              if (animationType === "line") {
                element.classList.add("animate-line");
              } else if (animationType === "content") {
                element.classList.add("animate-visible");
              }

              // Unobserve after animation
              animationObserver?.unobserve(element);
            }
          });
        }, observerOptions);

        // Cache selector and observe elements with animation data attributes
        const animatedElements = document.querySelectorAll(
          "[data-animation-type]"
        );
        // Use forEach with early return for better performance
        for (let i = 0; i < animatedElements.length; i++) {
          animationObserver?.observe(animatedElements[i]);
        }
      }

      // Setup on page load and view transitions
      document.addEventListener("astro:page-load", setupUnifiedAnimations);
      setTimeout(setupUnifiedAnimations, 100); // Initial load
    </script>
  </head>
  <body>
    <div>
      {
        Astro.url.pathname === "/" ? (
          <JumboText text="Ephriam Nagler" class="title" />
        ) : (
          <Nav />
        )
      }
      <div class="px-2">
        <slot />
        <Work />
      </div>
    </div>
    <div class="flex flex-col gap-8 px-2"></div>
  </body>
</html>
